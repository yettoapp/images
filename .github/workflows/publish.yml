name: Build Docker image

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push-image:
    name: Build with Docker
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read
      packages: write
      attestations: write

    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: Dockerfile.db
            image_name: yettoapp/db

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files_yaml: |
            dockerfiles:
              - '**/Dockerfile*'

      - name: Bail if Dockerfile is unchanged
        if: ${{ github.event_name == 'push' }}
        id: check-success
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          if grep -q "${{ matrix.dockerfile }}" $ALL_CHANGED_FILES; then
            echo "${{ matrix.dockerfile }} found within $ALL_CHANGED_FILES"
          else
            echo "${{ matrix.dockerfile }} not found within $ALL_CHANGED_FILES"
            echo "found=true" >> $GITHUB_OUTPUT
          fi

      - name: Set up Docker Buildx
        if: ${{ github.event_name != 'push' || steps.check-success.outputs.found == 'true' }}
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        if: ${{ github.event_name != 'push' || steps.check-success.outputs.found == 'true' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        if: ${{ github.event_name != 'push' || steps.check-success.outputs.found == 'true' }}
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ matrix.image_name }}

      - name: Build and push Docker image
        id: push
        if: ${{ github.event_name != 'push' || steps.check-success.outputs.found == 'true' }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        if: ${{ github.event_name != 'push' || steps.check-success.outputs.found == 'true' }}
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ matrix.image_name }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
